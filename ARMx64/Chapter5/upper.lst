AARCH64 GAS  upper.s 			page 1


   1              	// Assembler program to convert a string to
   2              	// all upper case.
   3              	  .global _start
   4              	_start:
   5 0000 84020058 	  ldr x4, =instr      // start of input string
   6 0004 A3020058 	  ldr x3, =outstr     // output string
   7              	
   8              	// loop is until byte pointed to non-zero
   9              	loop:
  10 0008 85144038 	  ldrb w5, [x4], #1     // load character and incr pointer
  11              	// if w5 > 'z'
  12 000c BFE80171 	  cmp w5, #'z'          // is letter > 'z'?
  13 0010 8C000054 	  b.gt cont
  14              	// else if w5 < 'a' then goto end if
  15 0014 BF840171 	  cmp w5, #'a'
  16 0018 4B000054 	  b.lt cont
  17 001c A5800051 	  sub w5, w5, #('a'-'A')
  18              	cont: // end if
  19 0020 65140038 	  strb w5, [x3], #1     // store character to output str
  20 0024 BF000071 	  cmp w5, #0            // stop on hitting a null character
  21 0028 01FFFF54 	  b.ne loop             // loop if character is not null
  22              	
  23              	// setup to print
  24 002c 200080D2 	  mov x0, #1            // 1 = stdout
  25 0030 41010058 	  ldr x1, =outstr       // string to print
  26 0034 620001CB 	  sub x2, x3, x1        // get the length by sub'ing the pointers
  27 0038 080880D2 	  mov x8, #64           // syscall
  28 003c 010000D4 	  svc 0
  29              	
  30              	// exit
  31 0040 000080D2 	  mov x0, #0
  32 0044 A80B80D2 	  mov x8, #93           // syscall
  33 0048 010000D4 	  svc 0
  34              	
  35 004c 00000000 	  .data
  36 0000 54686973 	instr:  .asciz "This is our Test String that we will convert.\n",
  36      20697320 
  36      6F757220 
  36      54657374 
  36      20537472 
  37 002f 00000000 	outstr: .fill 255, 1, 0
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
