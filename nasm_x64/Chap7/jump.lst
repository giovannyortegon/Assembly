     1                                  ; jump.asm
     2                                  extern printf
     3                                  section .data
     4 00000000 2000000000000000            number1 dq 32
     5 00000008 2900000000000000            number2 dq 41
     6 00000010 4E756D62657231203E-         fmt1 db "Number1 >= Number2", 10, 0
     6 00000019 3D204E756D62657232-
     6 00000022 0A00               
     7 00000024 4E756D62657231203C-         fmt2 dq "Number1 <= Number2", 10, 0
     7 0000002D 3D204E756D62657232-
     7 00000036 0000000000000A0000-
     7 0000003F 000000000000000000-
     7 00000048 00000000           
     8                                  section .bss
     9                                  section .text
    10                                      global main
    11                                  main:
    12 00000000 4889E5                      mov rbp, rsp; for correct debugging
    13 00000003 55                          push rbp
    14 00000004 4889E5                      mov rbp, rsp
    15 00000007 488B0425[00000000]          mov rax, [number1]  ; move the numbers into registers
    16 0000000F 488B1C25[08000000]          mov rbx, [number2]  
    17 00000017 4839D8                      cmp rax, rbx        ; compare rax and rbx
    18 0000001A 7D16                        jge greater         ; rax greater or equal go to greater
    19 0000001C 48BF-                       mov rdi, fmt2       ; rax is smaller, continue here
    19 0000001E [2400000000000000] 
    20 00000026 B800000000                  mov rax, 0          ; no xmm involved
    21 0000002B E8(00000000)                call printf         ; display fmt2
    22 00000030 EB14                        jmp exit            ; jump to label exit
    23                                  greater:
    24 00000032 48BF-                       mov rdi, fmt1       ; rax is greater
    24 00000034 [1000000000000000] 
    25 0000003C B800000000                  mov rax, 0          ; no xmm involved
    26 00000041 E8(00000000)                call printf         ; display fmt1
    27                                  exit:
    28 00000046 4889EC                      mov rsp, rbp
    29 00000049 5D                          pop rbp
    30 0000004A C3                          ret
