     1                              <1> %ifidni __OUTPUT_FORMAT__, win32
     2                              <1> %define WINDOWS
     3                              <1> %endif
     4                              <1> %ifidni __OUTPUT_FORMAT__,macho32
     5                              <1> %macro defaultrel  0.nolist
     6                              <1>         default  rel
     7                              <1> %endmacro
     8                              <1> %define main _main
     9                              <1> %macro cname 1-*
    10                              <1> %rep %0
    11                              <1> %define %1 _ %+ %1
    12                              <1> %rotate 1
    13                              <1> %endrep
    14                              <1> %endmacro
    15                              <1> %macro CNAME 1-*
    16                              <1> %rep %0
    17                              <1> %define %1 _ %+ %1
    18                              <1> %rotate 1
    19                              <1> %endrep
    20                              <1> %endmacro
    21                              <1> %define abort _ %+ abort
    22                              <1> %define abs _ %+ abs
    23                              <1> %define acos _ %+ acos
    24                              <1> %define alarm _ %+ alarm
    25                              <1> %define alloca _ %+ alloca
    26                              <1> %define asctime _ %+ asctime
    27                              <1> %define asin _ %+ asin
    28                              <1> %define atan _ %+ atan
    29                              <1> %define atexit _ %+ atexit
    30                              <1> %define atof _ %+ atof
    31                              <1> %define atoi _ %+ atoi
    32                              <1> %define atol _ %+ atol
    33                              <1> %define basename _ %+ basename
    34                              <1> %define bcmp _ %+ bcmp
    35                              <1> %define bcopy _ %+ bcopy
    36                              <1> %define break _ %+ break
    37                              <1> %define brk _ %+ brk
    38                              <1> %define bsearch _ %+ bsearch
    39                              <1> %define bzero _ %+ bzero
    40                              <1> %define calloc _ %+ calloc
    41                              <1> %define ceil _ %+ ceil
    42                              <1> %define ceilf _ %+ ceilf
    43                              <1> %define chdir _ %+ chdir
    44                              <1> %define chmod _ %+ chmod
    45                              <1> %define chown _ %+ chown
    46                              <1> %define chroot _ %+ chroot
    47                              <1> %define clearenv _ %+ clearenv
    48                              <1> %define clock _ %+ clock
    49                              <1> %define close _ %+ close
    50                              <1> %define closedir _ %+ closedir
    51                              <1> %define cos _ %+ cos
    52                              <1> %define creat _ %+ creat
    53                              <1> %define ctime _ %+ ctime
    54                              <1> %define cuserid _ %+ cuserid
    55                              <1> %define difftime _ %+ difftime
    56                              <1> %define dirname _ %+ dirname
    57                              <1> %define drand48 _ %+ drand48
    58                              <1> %define dup _ %+ dup
    59                              <1> %define dup2 _ %+ dup2
    60                              <1> %define dup3 _ %+ dup3
    61                              <1> %define erf _ %+ erf
    62                              <1> %define errno _ %+ errno
    63                              <1> %define exec _ %+ exec
    64                              <1> %define execl _ %+ execl
    65                              <1> %define execle _ %+ execle
    66                              <1> %define execlp _ %+ execlp
    67                              <1> %define execv _ %+ execv
    68                              <1> %define execve _ %+ execve
    69                              <1> %define execvp _ %+ execvp
    70                              <1> %define execvpe _ %+ execvpe
    71                              <1> %define exit _ %+ exit
    72                              <1> %define exp _ %+ exp
    73                              <1> %define fclose _ %+ fclose
    74                              <1> %define fcntl _ %+ fcntl
    75                              <1> %define fdopen _ %+ fdopen
    76                              <1> %define fdopendir _ %+ fdopendir
    77                              <1> %define feof _ %+ feof
    78                              <1> %define fflush _ %+ fflush
    79                              <1> %define fgetc _ %+ fgetc
    80                              <1> %define fgets _ %+ fgets
    81                              <1> %define fileno _ %+ fileno
    82                              <1> %define flock _ %+ flock
    83                              <1> %define floor _ %+ floor
    84                              <1> %define fopen _ %+ fopen
    85                              <1> %define fork _ %+ fork
    86                              <1> %define fprintf _ %+ fprintf
    87                              <1> %define fputc _ %+ fputc
    88                              <1> %define fputs _ %+ fputs
    89                              <1> %define fread _ %+ fread
    90                              <1> %define free _ %+ free
    91                              <1> %define freopen _ %+ freopen
    92                              <1> %define fscanf _ %+ fscanf
    93                              <1> %define fseek _ %+ fseek
    94                              <1> %define fsetpos _ %+ fsetpos
    95                              <1> %define fstat _ %+ fstat
    96                              <1> %define fsync _ %+ fsync
    97                              <1> %define ftell _ %+ ftell
    98                              <1> %define ftime _ %+ ftime
    99                              <1> %define ftok _ %+ ftok
   100                              <1> %define funlockfile _ %+ funlockfile
   101                              <1> %define getc _ %+ getc
   102                              <1> %define getchar _ %+ getchar
   103                              <1> %define get_current_dir_name _ %+ get_current_dir_name
   104                              <1> %define getcwd _ %+ getcwd
   105                              <1> %define getdate _ %+ getdate
   106                              <1> %define getegid _ %+ getegid
   107                              <1> %define getenv _ %+ getenv
   108                              <1> %define geteuid _ %+ geteuid
   109                              <1> %define getgid _ %+ getgid
   110                              <1> %define getgrgid _ %+ getgrgid
   111                              <1> %define getgrnam _ %+ getgrnam
   112                              <1> %define getgroups _ %+ getgroups
   113                              <1> %define getline _ %+ getline
   114                              <1> %define getopt _ %+ getopt
   115                              <1> %define getpagesize _ %+ getpagesize
   116                              <1> %define getpass _ %+ getpass
   117                              <1> %define getpgid _ %+ getpgid
   118                              <1> %define getpgrp _ %+ getpgrp
   119                              <1> %define getpid _ %+ getpid
   120                              <1> %define getpmsg _ %+ getpmsg
   121                              <1> %define getppid _ %+ getppid
   122                              <1> %define getpt _ %+ getpt
   123                              <1> %define getpw _ %+ getpw
   124                              <1> %define getpwent _ %+ getpwent
   125                              <1> %define getpwnam _ %+ getpwnam
   126                              <1> %define getpwuid _ %+ getpwuid
   127                              <1> %define gets _ %+ gets
   128                              <1> %define getsid _ %+ getsid
   129                              <1> %define gettimeofday _ %+ gettimeofday
   130                              <1> %define getuid _ %+ getuid
   131                              <1> %define getumask _ %+ getumask
   132                              <1> %define getwd _ %+ getwd
   133                              <1> %define glob _ %+ glob
   134                              <1> %define globfree _ %+ globfree
   135                              <1> %define gmtime _ %+ gmtime
   136                              <1> %define index _ %+ index
   137                              <1> %define ioctl _ %+ ioctl
   138                              <1> %define ioperm _ %+ ioperm
   139                              <1> %define kill _ %+ kill
   140                              <1> %define killpg _ %+ killpg
   141                              <1> %define link _ %+ link
   142                              <1> %define localtime _ %+ localtime
   143                              <1> %define lock _ %+ lock
   144                              <1> %define lockf _ %+ lockf
   145                              <1> %define lseek _ %+ lseek
   146                              <1> %define lstat _ %+ lstat
   147                              <1> %define malloc _ %+ malloc
   148                              <1> %define memccpy _ %+ memccpy
   149                              <1> %define memchr _ %+ memchr
   150                              <1> %define memcmp _ %+ memcmp
   151                              <1> %define memcpy _ %+ memcpy
   152                              <1> %define memfrob _ %+ memfrob
   153                              <1> %define memmem _ %+ memmem
   154                              <1> %define memmove _ %+ memmove
   155                              <1> %define mempcpy _ %+ mempcpy
   156                              <1> %define memrchr _ %+ memrchr
   157                              <1> %define memset _ %+ memset
   158                              <1> %define mkdir _ %+ mkdir
   159                              <1> %define mkdtemp _ %+ mkdtemp
   160                              <1> %define mkfifo _ %+ mkfifo
   161                              <1> %define mknod _ %+ mknod
   162                              <1> %define mktemp _ %+ mktemp
   163                              <1> %define mktime _ %+ mktime
   164                              <1> %define mlock _ %+ mlock
   165                              <1> %define mlockall _ %+ mlockall
   166                              <1> %define mmap _ %+ mmap
   167                              <1> %define nanosleep _ %+ nanosleep
   168                              <1> %define nice _ %+ nice
   169                              <1> %define on_exit _ %+ on_exit
   170                              <1> %define open _ %+ open
   171                              <1> %define opendir _ %+ opendir
   172                              <1> %define optarg _ %+ optarg
   173                              <1> %define opterr _ %+ opterr
   174                              <1> %define optind _ %+ optind
   175                              <1> %define optopt _ %+ optopt
   176                              <1> %define pause _ %+ pause
   177                              <1> %define perror _ %+ perror
   178                              <1> %define pipe _ %+ pipe
   179                              <1> %define pipe2 _ %+ pipe2
   180                              <1> %define popen _ %+ popen
   181                              <1> %define pow _ %+ pow
   182                              <1> %define printf _ %+ printf
   183                              <1> %define pthread_attr_destroy _ %+ pthread_attr_destroy
   184                              <1> %define pthread_attr_getaffinity_np _ %+ pthread_attr_getaffinity_np
   185                              <1> %define pthread_attr_getdetachstate _ %+ pthread_attr_getdetachstate
   186                              <1> %define pthread_attr_getguardsize _ %+ pthread_attr_getguardsize
   187                              <1> %define pthread_attr_getinheritsched _ %+ pthread_attr_getinheritsched
   188                              <1> %define pthread_attr_getschedparam _ %+ pthread_attr_getschedparam
   189                              <1> %define pthread_attr_getschedpolicy _ %+ pthread_attr_getschedpolicy
   190                              <1> %define pthread_attr_getscope _ %+ pthread_attr_getscope
   191                              <1> %define pthread_attr_getstack _ %+ pthread_attr_getstack
   192                              <1> %define pthread_attr_getstackaddr _ %+ pthread_attr_getstackaddr
   193                              <1> %define pthread_attr_getstacksize _ %+ pthread_attr_getstacksize
   194                              <1> %define pthread_attr_init _ %+ pthread_attr_init
   195                              <1> %define pthread_attr_setaffinity_np _ %+ pthread_attr_setaffinity_np
   196                              <1> %define pthread_attr_setdetachstate _ %+ pthread_attr_setdetachstate
   197                              <1> %define pthread_attr_setguardsize _ %+ pthread_attr_setguardsize
   198                              <1> %define pthread_attr_setinheritsched _ %+ pthread_attr_setinheritsched
   199                              <1> %define pthread_attr_setschedparam _ %+ pthread_attr_setschedparam
   200                              <1> %define pthread_attr_setschedpolicy _ %+ pthread_attr_setschedpolicy
   201                              <1> %define pthread_attr_setscope _ %+ pthread_attr_setscope
   202                              <1> %define pthread_attr_setstack _ %+ pthread_attr_setstack
   203                              <1> %define pthread_attr_setstackaddr _ %+ pthread_attr_setstackaddr
   204                              <1> %define pthread_attr_setstacksize _ %+ pthread_attr_setstacksize
   205                              <1> %define pthread_cancel _ %+ pthread_cancel
   206                              <1> %define pthread_cleanup_pop _ %+ pthread_cleanup_pop
   207                              <1> %define pthread_cleanup_pop_restore_np _ %+ pthread_cleanup_pop_restore_np
   208                              <1> %define pthread_cleanup_push _ %+ pthread_cleanup_push
   209                              <1> %define pthread_cleanup_push_defer_np _ %+ pthread_cleanup_push_defer_np
   210                              <1> %define pthread_create _ %+ pthread_create
   211                              <1> %define pthread_detach _ %+ pthread_detach
   212                              <1> %define pthread_equal _ %+ pthread_equal
   213                              <1> %define pthread_exit _ %+ pthread_exit
   214                              <1> %define pthread_getaffinity_np _ %+ pthread_getaffinity_np
   215                              <1> %define pthread_getattr_np _ %+ pthread_getattr_np
   216                              <1> %define pthread_getconcurrency _ %+ pthread_getconcurrency
   217                              <1> %define pthread_getcpuclockid _ %+ pthread_getcpuclockid
   218                              <1> %define pthread_getschedparam _ %+ pthread_getschedparam
   219                              <1> %define pthread_join _ %+ pthread_join
   220                              <1> %define pthread_kill _ %+ pthread_kill
   221                              <1> %define pthread_kill_other_threads_np _ %+ pthread_kill_other_threads_np
   222                              <1> %define pthread_self _ %+ pthread_self
   223                              <1> %define pthread_setaffinity_np _ %+ pthread_setaffinity_np
   224                              <1> %define pthread_setcancelstate _ %+ pthread_setcancelstate
   225                              <1> %define pthread_setcanceltype _ %+ pthread_setcanceltype
   226                              <1> %define pthread_setconcurrency _ %+ pthread_setconcurrency
   227                              <1> %define pthread_setschedparam _ %+ pthread_setschedparam
   228                              <1> %define pthread_setschedprio _ %+ pthread_setschedprio
   229                              <1> %define pthread_sigmask _ %+ pthread_sigmask
   230                              <1> %define pthread_sigqueue _ %+ pthread_sigqueue
   231                              <1> %define pthread_testcancel _ %+ pthread_testcancel
   232                              <1> %define pthread_timedjoin_np _ %+ pthread_timedjoin_np
   233                              <1> %define pthread_tryjoin_np _ %+ pthread_tryjoin_np
   234                              <1> %define pthread_yield _ %+ pthread_yield
   235                              <1> %define putc _ %+ putc
   236                              <1> %define putchar _ %+ putchar
   237                              <1> %define putenv _ %+ putenv
   238                              <1> %define puts _ %+ puts
   239                              <1> %define qsort _ %+ qsort
   240                              <1> %define raise _ %+ raise
   241                              <1> %define rand _ %+ rand
   242                              <1> %define random _ %+ random
   243                              <1> %define read _ %+ read
   244                              <1> %define readahead _ %+ readahead
   245                              <1> %define readdir _ %+ readdir
   246                              <1> %define readline _ %+ readline
   247                              <1> %define realloc _ %+ realloc
   248                              <1> %define remove _ %+ remove
   249                              <1> %define rename _ %+ rename
   250                              <1> %define rewind _ %+ rewind
   251                              <1> %define rewinddir _ %+ rewinddir
   252                              <1> %define rindex _ %+ rindex
   253                              <1> %define rmdir _ %+ rmdir
   254                              <1> %define sbrk _ %+ sbrk
   255                              <1> %define scandir _ %+ scandir
   256                              <1> %define scanf _ %+ scanf
   257                              <1> %define seed48 _ %+ seed48
   258                              <1> %define seekdir _ %+ seekdir
   259                              <1> %define setbuf _ %+ setbuf
   260                              <1> %define setbuffer _ %+ setbuffer
   261                              <1> %define setegid _ %+ setegid
   262                              <1> %define setenv _ %+ setenv
   263                              <1> %define seteuid _ %+ seteuid
   264                              <1> %define setgid _ %+ setgid
   265                              <1> %define setgroups _ %+ setgroups
   266                              <1> %define setjmp _ %+ setjmp
   267                              <1> %define setlinebuf _ %+ setlinebuf
   268                              <1> %define setpgid _ %+ setpgid
   269                              <1> %define setpgrp _ %+ setpgrp
   270                              <1> %define setregid _ %+ setregid
   271                              <1> %define setresgid _ %+ setresgid
   272                              <1> %define setresuid _ %+ setresuid
   273                              <1> %define setreuid _ %+ setreuid
   274                              <1> %define setsid _ %+ setsid
   275                              <1> %define setuid _ %+ setuid
   276                              <1> %define setvbuf _ %+ setvbuf
   277                              <1> %define signal _ %+ signal
   278                              <1> %define sin _ %+ sin
   279                              <1> %define sincos _ %+ sincos
   280                              <1> %define sleep _ %+ sleep
   281                              <1> %define snprintf _ %+ snprintf
   282                              <1> %define sprintf _ %+ sprintf
   283                              <1> %define sqrt _ %+ sqrt
   284                              <1> %define srand _ %+ srand
   285                              <1> %define srand48 _ %+ srand48
   286                              <1> %define srandom _ %+ srandom
   287                              <1> %define sscanf _ %+ sscanf
   288                              <1> %define stat _ %+ stat
   289                              <1> %define statfs _ %+ statfs
   290                              <1> %define stderr _ %+ stderr
   291                              <1> %define stdin _ %+ stdin
   292                              <1> %define stdout _ %+ stdout
   293                              <1> %define stpcpy _ %+ stpcpy
   294                              <1> %define stpncpy _ %+ stpncpy
   295                              <1> %define strcasecmp _ %+ strcasecmp
   296                              <1> %define strcasestr _ %+ strcasestr
   297                              <1> %define strcat _ %+ strcat
   298                              <1> %define strchr _ %+ strchr
   299                              <1> %define strchrnul _ %+ strchrnul
   300                              <1> %define strcmp _ %+ strcmp
   301                              <1> %define strcoll _ %+ strcoll
   302                              <1> %define strcpy _ %+ strcpy
   303                              <1> %define strcspn _ %+ strcspn
   304                              <1> %define strdup _ %+ strdup
   305                              <1> %define strdupa _ %+ strdupa
   306                              <1> %define strerror _ %+ strerror
   307                              <1> %define strfry _ %+ strfry
   308                              <1> %define strftime _ %+ strftime
   309                              <1> %define strlen _ %+ strlen
   310                              <1> %define strncasecmp _ %+ strncasecmp
   311                              <1> %define strncat _ %+ strncat
   312                              <1> %define strncmp _ %+ strncmp
   313                              <1> %define strncpy _ %+ strncpy
   314                              <1> %define strndup _ %+ strndup
   315                              <1> %define strndupa _ %+ strndupa
   316                              <1> %define strnlen _ %+ strnlen
   317                              <1> %define strpbrk _ %+ strpbrk
   318                              <1> %define strptime _ %+ strptime
   319                              <1> %define strrchr _ %+ strrchr
   320                              <1> %define strsep _ %+ strsep
   321                              <1> %define strsignal _ %+ strsignal
   322                              <1> %define strspn _ %+ strspn
   323                              <1> %define strstr _ %+ strstr
   324                              <1> %define strtod _ %+ strtod
   325                              <1> %define strtof _ %+ strtof
   326                              <1> %define strtoimax _ %+ strtoimax
   327                              <1> %define strtok _ %+ strtok
   328                              <1> %define strtol _ %+ strtol
   329                              <1> %define strtold _ %+ strtold
   330                              <1> %define strtoul _ %+ strtoul
   331                              <1> %define swab _ %+ swab
   332                              <1> %define symlink _ %+ symlink
   333                              <1> %define sync _ %+ sync
   334                              <1> %define sysctl _ %+ sysctl
   335                              <1> %define system _ %+ system
   336                              <1> %define tan _ %+ tan
   337                              <1> %define telldir _ %+ telldir
   338                              <1> %define tempnam _ %+ tempnam
   339                              <1> %define time _ %+ time
   340                              <1> %define timegm _ %+ timegm
   341                              <1> %define timelocal _ %+ timelocal
   342                              <1> %define tmpfile _ %+ tmpfile
   343                              <1> %define tmpnam _ %+ tmpnam
   344                              <1> %define ulimit _ %+ ulimit
   345                              <1> %define umask _ %+ umask
   346                              <1> %define ungetc _ %+ ungetc
   347                              <1> %define unlink _ %+ unlink
   348                              <1> %define unsetenv _ %+ unsetenv
   349                              <1> %define usleep _ %+ usleep
   350                              <1> %define ustat _ %+ ustat
   351                              <1> %define utime _ %+ utime
   352                              <1> %define utimes _ %+ utimes
   353                              <1> %define valloc _ %+ valloc
   354                              <1> %define vasprintf _ %+ vasprintf
   355                              <1> %define vfork _ %+ vfork
   356                              <1> %define vfprintf _ %+ vfprintf
   357                              <1> %define vfscanf _ %+ vfscanf
   358                              <1> %define vprintf _ %+ vprintf
   359                              <1> %define vscanf _ %+ vscanf
   360                              <1> %define vserver _ %+ vserver
   361                              <1> %define vsnprintf _ %+ vsnprintf
   362                              <1> %define vsprintf _ %+ vsprintf
   363                              <1> %define vsscanf _ %+ vsscanf
   364                              <1> %define wait _ %+ wait
   365                              <1> %define wait3 _ %+ wait3
   366                              <1> %define wait4 _ %+ wait4
   367                              <1> %define waitid _ %+ waitid
   368                              <1> %define waitpid _ %+ waitpid
   369                              <1> %define write _ %+ write
   370                              <1> %else
   371                              <1> %define start _start
   372                              <1> %macro cname 1-*
   373                              <1> %rep %0
   374                              <1> %undef %1
   375                              <1> %rotate 1
   376                              <1> %endrep
   377                              <1> %endmacro
   378                              <1> %macro CNAME 1-*
   379                              <1> %rep %0
   380                              <1> %undef %1
   381                              <1> %rotate 1
   382                              <1> %endrep
   383                              <1> %endmacro
   384                              <1> %macro defaultrel  0.nolist
   385                              <1> %endmacro
   386                              <1> %endif
   387                              <1>     defaultrel
   388                              <1> %undef defaultrel
   389                              <1> 
   390                              <1> %ifdef WINDOWS
   391                              <1> ;
   392                              <1> ;   frame  [parameters] [locals] [new_parameters]
   393                              <1> ;   parameters > 4 on stack
   394                              <1> ;
   395                              <1> %macro frame 0-3 0,0,0   ; %1, %2 & %3 default to 0 
   396                              <1> %if %3 <= 4
   397                              <1> %assign xp 0
   398                              <1> %else
   399                              <1> %assign xp %3-4
   400                              <1> %endif
   401                              <1> %if %2 <= 4
   402                              <1> %assign locals 0
   403                              <1> %else
   404                              <1> %assign locals %2-4
   405                              <1> %endif
   406                              <1> ;   Subtract enough for locals and then parameters past 6
   407                              <1> %assign frame_size (4+locals+xp+1)/2*16
   408                              <1> %endmacro
   409                              <1> %undef xp
   410                              <1> %undef locals
   411                              <1> 
   412                              <1> ;   Windows
   413                              <1> ;   First 4 local variables are in the stack frame
   414                              <1> 
   415                              <1> local1 equ 16
   416                              <1> local2 equ 24
   417                              <1> local3 equ 32
   418                              <1> local4 equ 40
   419                              <1> 
   420                              <1> ;   Local variables after 4 relative to rbp with negative offsets
   421                              <1> ;
   422                              <1> ;   local5 will be -8
   423                              <1> ;   local6 will be -16
   424                              <1> ;   ...
   425                              <1> ;   local100 be be -768
   426                              <1> ;   [rbp+localX]
   427                              <1> 
   428                              <1> %macro local 1
   429                              <1> local%1 equ   -8*(%1-4)
   430                              <1> %endmacro
   431                              <1> %assign i 5
   432                              <1> %rep 100
   433                              <1>      local i
   434                              <1>      %assign i i+1
   435                              <1> %endrep
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   435                              <2>  local i
   435                              <3> local%1 equ -8*(%1-4)
   435                              <2>  %assign i i+1
   436                              <1> %undef i   
   437                              <1> ;   Windows
   438                              <1> ;   Where to place extra parameters when you call a function with
   439                              <1> ;   more than 4 parameters.
   440                              <1> ;
   441                              <1> ;   newPar5 will be 32
   442                              <1> ;   newPar6 will be 40
   443                              <1> ;   ...
   444                              <1> ;   newPar100 will be 99*8 = 792
   445                              <1> ;   [rsp+newParX]
   446                              <1> 
   447                              <1> %macro newpar 1
   448                              <1> newPar%1  equ   8*(i-1)
   449                              <1> %endmacro
   450                              <1> %assign i 5
   451                              <1> %rep 96
   452                              <1>         newpar i
   453                              <1>         %assign i i+1
   454                              <1> %endrep
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   454                              <2>  newpar i
   454                              <3> newPar%1 equ 8*(i-1)
   454                              <2>  %assign i i+1
   455                              <1> %undef i   
   456                              <1> 
   457                              <1> ;   Windows
   458                              <1> ;   Where to find additional parameters to current function
   459                              <1> ;   past parameter 4
   460                              <1> ;
   461                              <1> ;   currPar5 will be 48
   462                              <1> ;   currPar6 will be 56
   463                              <1> ;   ...
   464                              <1> ;   currPar100 will be 808
   465                              <1> ;   [rbp+currParX]
   466                              <1> 
   467                              <1> %macro parequ 1
   468                              <1> currPar%1  equ 16+8*(%1+1)
   469                              <1> %endmacro
   470                              <1> 
   471                              <1> %assign i 5
   472                              <1> %rep 96
   473                              <1>         parequ i
   474                              <1>         %assign i i+1
   475                              <1> %endrep
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   475                              <2>  parequ i
   475                              <3> currPar%1 equ 16+8*(%1+1)
   475                              <2>  %assign i i+1
   476                              <1> %undef i   
   477                              <1> 
   478                              <1> %else                       ; Linux/OS X
   479                              <1> ;
   480                              <1> ;   frame [parameters] [locals] [new_parameters]
   481                              <1> ;   parameters on stack
   482                              <1> ;
   483                              <1> %macro frame 0-3 0,0,0
   484                              <1> ;   Subtract enough for locals and then parameters past 6
   485                              <1> %assign frame_size (%2+%3)*4
   486                              <1> %endmacro
   487                              <1> %undef xp
   488                              <1> 
   489                              <1> ;   Linux
   490                              <1> ;   Local variables accessed relative to rbp with negative offsets
   491                              <1> ;
   492                              <1> ;   local1 will be -4
   493                              <1> ;   local2 will be -8
   494                              <1> ;   ...
   495                              <1> ;   local100 be be -400
   496                              <1> ;   [ebp+localX]
   497                              <1> 
   498                              <1> %macro local 1
   499                              <1> local%1 equ   -4*%1
   500                              <1> %endmacro
   501                              <1> %assign i 1
   502                              <1> %rep 100
   503                              <1>      local i
   504                              <1>      %assign i i+1
   505                              <1> %endrep
   506                              <1> %undef i
   507                              <1>    
   508                              <1> ;   Linux
   509                              <1> ;   Where to place extra parameters when you call a function with
   510                              <1> ;   more than 6 parameters.
   511                              <1> ;
   512                              <1> ;   newPar1 will be 0
   513                              <1> ;   newPar2 will be 4
   514                              <1> ;   ...
   515                              <1> ;   newPar100 will be 99*4 = 396
   516                              <1> ;   [esp+newParX]
   517                              <1> 
   518                              <1> %macro newpar 1
   519                              <1> newPar%1  equ   4*(i-1)
   520                              <1> %endmacro
   521                              <1> %assign i 1
   522                              <1> %rep 100
   523                              <1>         newpar i
   524                              <1>         %assign i i+1
   525                              <1> %endrep
   526                              <1> %undef i
   527                              <1> 
   528                              <1> ;   Linux
   529                              <1> ;   Where to find additional parameters to current function
   530                              <1> ;   past parameter 6
   531                              <1> ;
   532                              <1> ;   currPar1 will be 8
   533                              <1> ;   currPar2 will be 12
   534                              <1> ;   ...
   535                              <1> ;   currPar100 will be 404
   536                              <1> ;   [ebp+currParX]
   537                              <1> 
   538                              <1> %macro parequ 1
   539                              <1> currPar%1  equ 8+4*(%1-1)
   540                              <1> %endmacro
   541                              <1> 
   542                              <1> %assign i 7
   543                              <1> %rep 94
   544                              <1>         parequ i
   545                              <1>         %assign i i+1
   546                              <1> %endrep
   547                              <1> %undef i
   548                              <1> 
   549                              <1> %endif      ; from original test on WINDOWS
   550                              <1> 
   551                              <1> %macro  multipush 2-*
   552                              <1> %rep %0
   553                              <1>         push %1
   554                              <1> %rotate 1
   555                              <1> %endrep
   556                              <1> %endmacro
   557                              <1> 
   558                              <1> %macro  multipop 2-*
   559                              <1> %rep %0
   560                              <1>         pop %1
   561                              <1> %rotate 1
   562                              <1> %endrep
   563                              <1> %endmacro
   564                              <1> 
   565                              <1> %macro alias 2
   566                              <1> %define d%1 %2d
   567                              <1> %define w%1 %2w
   568                              <1> %define b%1 %2b
   569                              <1> %define h%1 %2h
   570                              <1> %endmacro
   571                              <1> 
   572                              <1> %macro unalias 1-*
   573                              <1> %rep %0
   574                              <1> %undef d%1
   575                              <1> %undef w%1
   576                              <1> %undef b%1
   577                              <1> %undef h%1
   578                              <1> %rotate 1
   579                              <1> %endrep
   580                              <1> %endmacro
   581                              <1> 
   582                              <1> %macro fpalias 2
   583                              <1> %define y%1 ymm%2
   584                              <1> %define x%1 xmm%2
   585                              <1> %endmacro
   586                              <1> 
   587                              <1> %macro fpunalias 1-*
   588                              <1> %rep %0
   589                              <1> %undef y%1
   590                              <1> %undef x%1
   591                              <1> %rotate 1
   592                              <1> %endrep
   593                              <1> %endmacro
     1                                  section .data
     2 00000000 48656C6C6F20576F72-         msg: db "Hello World!", 0x0a, 0
     2 00000009 6C64210A00         
     3                                  
     4                                  section .text
     5                                      global main
     6                                      extern printf
     7                                  
     8                                  main: 
     9 00000000 55                          push rbp
    10 00000001 4889E5                      mov rbp, rsp
    11 00000004 4883EC20                    sub rsp, 32
    12                                  
    13 00000008 488D0C25[00000000]          lea rcx, [msg]          ; parameter 1 for printf
    14 00000010 E8(00000000)                call printf
    15                                  
    16 00000015 31C0                        xor eax, eax            ; return 0
    17 00000017 C9                          leave
    18 00000018 C3                          ret
