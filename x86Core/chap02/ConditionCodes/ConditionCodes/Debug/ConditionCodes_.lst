Microsoft (R) Macro Assembler Version 14.16.27045.0	    12/28/21 20:48:07
ConditionCodes_.asm					     Page 1 - 1


					.model flat, c
 00000000				.code
				; extern "C" int SignedMinA_(int a, int b, int c);
				;
				; Description: Determines minimum of three signed integers
				; using conditional jumps.
				;
				; Returns min(a, b, c)

 00000000			SignedMinA_ proc
 00000000  55				push ebp
 00000001  8B EC			mov ebp, esp
 00000003  8B 45 08			mov eax, [ebp+8]		;eax = 'a'
 00000006  8B 4D 0C			mov ecx, [ebp+12]		;ecx = 'b'
				; Determine min(a, b)
 00000009  3B C1			cmp eax, ecx
 0000000B  7E 02			jle @F
 0000000D  8B C1			mov eax, ecx			;eax = min(a, b)
				; Determine min(a, b, c)
 0000000F			@@:
 0000000F  8B 4D 10			mov ecx, [ebp+16]		;ecx = 'c'
 00000012  3B C1			cmp eax, ecx
 00000014  7E 02			jle @F
 00000016  8B C1			mov eax, ecx			;eax = min(a, b, c)
 00000018			@@:
 00000018  5D				pop ebp
 00000019  C3				ret
 0000001A			SignedMinA_ endp

				; extern "C" int SignedMaxA_(int a, int b, int c);
				;
				; Description: Determines maximum of three signed integers
				; using conditional jumps.
				;
				; Returns: max(a, b, c)
 0000001A			SignedMaxA_ proc
 0000001A  55				push ebp
 0000001B  8B EC			mov ebp, esp
 0000001D  8B 45 08			mov eax, [ebp+8]		;eax = 'a'
 00000020  8B 4D 0C			mov ecx, [ebp+12]		;ecx = 'b'
 00000023  3B C1			cmp eax, ecx
 00000025  7D 02			jge @F
 00000027  8B C1			mov eax, ecx			;eax = max(a, b)
 00000029			@@:
 00000029  8B 4D 10			mov ecx, [ebp+16]		;ecx = 'c'
 0000002C  3B C1			cmp eax, ecx
 0000002E  7D 02			jge @F
 00000030  8B C1			mov eax, ecx			;eax = max(a, b, c)
 00000032			@@:
 00000032  5D				pop ebp
 00000033  C3				ret
 00000034			SignedMaxA_ endp

				; extern "C" int SignedMinB_(int a, int b, int c);
				;
				; Description: Determines minimum of three signed integers
				; using conditional moves.
				;
				; Returns min(a, b, c)

 00000034			SignedMinB_ proc
 00000034  55				push ebp
 00000035  8B EC			mov ebp, esp
 00000037  8B 45 08			mov eax, [ebp+8]	;eax = 'a'
 0000003A  8B 4D 0C			mov ecx, [ebp+12]	;ecx = 'b'
				; Determine smallest value using the CMOVG instruction
 0000003D  3B C1			cmp eax, ecx
 0000003F  0F 4F C1			cmovg eax, ecx		;eax = min(a, b)
 00000042  8B 4D 10			mov ecx, [ebp+16]	;ecx = 'c'
 00000045  3B C1			cmp eax, ecx
 00000047  0F 4F C1			cmovg eax, ecx		;eax = min(a, b, c)
 0000004A  5D				pop ebp
 0000004B  C3				ret
 0000004C			SignedMinB_ endp

				; extern "C" int SignedMaxB_(int a, int b, int c);
				;
				; Description: Determines maximum of three signed integers
				; using conditional moves.
				;
				; Returns: max(a, b, c)
 0000004C			SignedMaxB_ proc
 0000004C  55				push ebp
 0000004D  8B EC			mov ebp, esp
 0000004F  8B 45 08			mov eax, [ebp+8]	;eax = 'a'
 00000052  8B 4D 0C			mov ecx, [ebp+12]	;ecx = 'b'
				; Determine largest value using the CMOVL instruction
 00000055  3B C1			cmp eax, ecx
 00000057  0F 4C C1			cmovl eax, ecx		;eax = max(a, b)
 0000005A  8B 4D 10			mov ecx, [ebp+16]	;ecx = 'c'
 0000005D  3B C1			cmp eax, ecx
 0000005F  0F 4C C1			cmovl eax, ecx		;eax = max(a, b, c)
 00000062  0F 4C C1			cmovl eax, ecx		;eax = max(a, b, c)
 00000065  5D				pop ebp
 00000066  C3				ret
 00000067			SignedMaxB_ endp
					end
Microsoft (R) Macro Assembler Version 14.16.27045.0	    12/28/21 20:48:07
ConditionCodes_.asm					     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000067 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

SignedMaxA_  . . . . . . . . . .	P Near	 0000001A _TEXT	Length= 0000001A Public C
SignedMaxB_  . . . . . . . . . .	P Near	 0000004C _TEXT	Length= 0000001B Public C
SignedMinA_  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001A Public C
SignedMinB_  . . . . . . . . . .	P Near	 00000034 _TEXT	Length= 00000018 Public C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000001h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT

	   0 Warnings
	   0 Errors
